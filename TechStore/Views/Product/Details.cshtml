@model TechStore.Models.ViewModels.CreateProductViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>CreateProductViewModel</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ProductID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProductID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Manufacturer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Manufacturer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateAdded)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateAdded)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateUpdated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateUpdated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhotoURL)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhotoURL)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsInStock)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsInStock)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LeftInStock)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LeftInStock)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AvailableInStockTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AvailableInStockTime)
        </dd>


        <dd>
            <button id="see-orders" class="btn btn-primary">See orders</button>
        </dd>
    </dl>
</div>
<div id="orders">

</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ProductID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<style>
    .appended-buttons{
        font-size:large;
        font-family:Consolas;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        var productID = @Model.ProductID;
        var ajaxUrl = "/Product/GetOrders/" + productID;
        var orderList = $('#orders');
        $('#see-orders').click(function () {
            orderList.empty();
            $.ajax({
                type: "get",
                url: ajaxUrl,
                success: ajaxSuccess,
                contentType: "application/json; charset=utf-8",
                dataType: "json",

            });
        });
        function ajaxSuccess(data, status) {

            showOrders(data);
        };
        function getHtmlToAppend(counter, orderID, orderdate, customerUserName) {
            //1.<a href="order/id class='appended-buttons' id='OrderID'">March 20<a>
            return "<div class='col-md-6'>" + counter + ". " + "<a class='appended-buttons btn btn-primary id='"
                + orderID + "' href='/Order/Details/" +
                orderID + "'>" + customerUserName + ": " + orderdate + "<a><div>";
        }
        function showOrders(data) {

            for (var i = 0; i < data.length; i++) {

                let orderDateValue = data[i].OrderDate;
                let num = i + 1;
                var htmlToAppend = getHtmlToAppend(num, data[i].OrderID, data[i].OrderDate, data[i].CustomerUserName);
                orderList.append(htmlToAppend);
            }
        }
    });
</script>