@model TechStore.Models.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Edit";
}

<h1>@ViewBag.Error</h1>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CustomerViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => Model.CustomerID)



        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRegistered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateRegistered, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateRegistered, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<div id="add-order">
    @Html.ActionLink("Add Order to customer", "AddOrder", "Customer", new { userName = Model.UserName }, new { @class = "btn btn-success" })
</div>
<h1> ORDERS: </h1>
<div>
    ORDERS ISSUED:
</div>

<div id="orders-for-customer" class="row">

</div>
<script type="text/javascript">
    var $ordersForCustomerDiv = $('#orders-for-customer');
    var appendingFactory = new htmlAppendingFactory();
        var itemsFactory = new storeFactory(appendingFactory);
    function ajaxSuccess(data, status) {
        itemsFactory.GetOrdersPerCustomer($ordersForCustomerDiv,@Model.CustomerID);

    };


    var RemoveOrder = function (id, event) {
            //Called from a button only
            event.preventDefault();
            var buttonID = id;
            var shouldRemove = confirm("Are you sure you want to remove this order that the customer issued?");
            if (shouldRemove) {
                $.ajax({
                    type: "get",
                    url: "/Customer/RemoveOrderFromCustomer",
                    data: {
                        customerID: @Model.CustomerID,
                        orderID: buttonID,
                    },
                    success: ajaxSuccess,
                    // contentType: "application/json; charset=utf-8",
                    // dataType: "json",

                });
            }
    };
     $(document).ready(function () {
         itemsFactory.GetOrdersPerCustomer($ordersForCustomerDiv,@Model.CustomerID);
    });
</script>
